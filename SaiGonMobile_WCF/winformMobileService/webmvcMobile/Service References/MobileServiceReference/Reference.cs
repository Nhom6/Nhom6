//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webmvcMobile.MobileServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/MobileStoreService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.OrderDetail[] OrderDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.StorageShop StorageShopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Display {
            get {
                return this.DisplayField;
            }
            set {
                if ((this.DisplayField.Equals(value) != true)) {
                    this.DisplayField = value;
                    this.RaisePropertyChanged("Display");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.OrderDetail[] OrderDetails {
            get {
                return this.OrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDetailsField, value) != true)) {
                    this.OrderDetailsField = value;
                    this.RaisePropertyChanged("OrderDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.StorageShop StorageShop {
            get {
                return this.StorageShopField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageShopField, value) != true)) {
                    this.StorageShopField = value;
                    this.RaisePropertyChanged("StorageShop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/MobileStoreService")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.Product[] ProductsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.Product[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageShop", Namespace="http://schemas.datacontract.org/2004/07/MobileStoreService")]
    [System.SerializableAttribute()]
    public partial class StorageShop : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateUpdate {
            get {
                return this.DateUpdateField;
            }
            set {
                if ((this.DateUpdateField.Equals(value) != true)) {
                    this.DateUpdateField = value;
                    this.RaisePropertyChanged("DateUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDField, value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDetail", Namespace="http://schemas.datacontract.org/2004/07/MobileStoreService")]
    [System.SerializableAttribute()]
    public partial class OrderDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.Order OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.Order Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDField, value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/MobileStoreService")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.OrderDetail[] OrderDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreate {
            get {
                return this.DateCreateField;
            }
            set {
                if ((this.DateCreateField.Equals(value) != true)) {
                    this.DateCreateField = value;
                    this.RaisePropertyChanged("DateCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.OrderDetail[] OrderDetails {
            get {
                return this.OrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDetailsField, value) != true)) {
                    this.OrderDetailsField = value;
                    this.RaisePropertyChanged("OrderDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Payment {
            get {
                return this.PaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentField, value) != true)) {
                    this.PaymentField = value;
                    this.RaisePropertyChanged("Payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientAddress {
            get {
                return this.RecipientAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientAddressField, value) != true)) {
                    this.RecipientAddressField = value;
                    this.RaisePropertyChanged("RecipientAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/MobileStoreService")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.Order[] OrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.UserType UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.Order[] Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.UserType UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserTypeID {
            get {
                return this.UserTypeIDField;
            }
            set {
                if ((this.UserTypeIDField.Equals(value) != true)) {
                    this.UserTypeIDField = value;
                    this.RaisePropertyChanged("UserTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://schemas.datacontract.org/2004/07/MobileStoreService")]
    [System.SerializableAttribute()]
    public partial class UserType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private webmvcMobile.MobileServiceReference.Account[] AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserType1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public webmvcMobile.MobileServiceReference.Account[] Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType1 {
            get {
                return this.UserType1Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserType1Field, value) != true)) {
                    this.UserType1Field = value;
                    this.RaisePropertyChanged("UserType1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MobileServiceReference.IMobileService")]
    public interface IMobileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAll", ReplyAction="http://tempuri.org/IMobileService/GetAllResponse")]
        webmvcMobile.MobileServiceReference.Product[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAll", ReplyAction="http://tempuri.org/IMobileService/GetAllResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Product[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetByID", ReplyAction="http://tempuri.org/IMobileService/GetByIDResponse")]
        webmvcMobile.MobileServiceReference.Product GetByID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetByID", ReplyAction="http://tempuri.org/IMobileService/GetByIDResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Product> GetByIDAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AddProduct", ReplyAction="http://tempuri.org/IMobileService/AddProductResponse")]
        void AddProduct(webmvcMobile.MobileServiceReference.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AddProduct", ReplyAction="http://tempuri.org/IMobileService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(webmvcMobile.MobileServiceReference.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateProduct", ReplyAction="http://tempuri.org/IMobileService/UpdateProductResponse")]
        void UpdateProduct(webmvcMobile.MobileServiceReference.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateProduct", ReplyAction="http://tempuri.org/IMobileService/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(webmvcMobile.MobileServiceReference.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/DeleteProduct", ReplyAction="http://tempuri.org/IMobileService/DeleteProductResponse")]
        void DeleteProduct(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/DeleteProduct", ReplyAction="http://tempuri.org/IMobileService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/CheckIDProduct", ReplyAction="http://tempuri.org/IMobileService/CheckIDProductResponse")]
        bool CheckIDProduct(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/CheckIDProduct", ReplyAction="http://tempuri.org/IMobileService/CheckIDProductResponse")]
        System.Threading.Tasks.Task<bool> CheckIDProductAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAllAccount", ReplyAction="http://tempuri.org/IMobileService/GetAllAccountResponse")]
        webmvcMobile.MobileServiceReference.Account[] GetAllAccount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAllAccount", ReplyAction="http://tempuri.org/IMobileService/GetAllAccountResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Account[]> GetAllAccountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAccountByID", ReplyAction="http://tempuri.org/IMobileService/GetAccountByIDResponse")]
        webmvcMobile.MobileServiceReference.Account GetAccountByID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAccountByID", ReplyAction="http://tempuri.org/IMobileService/GetAccountByIDResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Account> GetAccountByIDAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/EditAccount", ReplyAction="http://tempuri.org/IMobileService/EditAccountResponse")]
        void EditAccount(webmvcMobile.MobileServiceReference.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/EditAccount", ReplyAction="http://tempuri.org/IMobileService/EditAccountResponse")]
        System.Threading.Tasks.Task EditAccountAsync(webmvcMobile.MobileServiceReference.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/DeleteAccount", ReplyAction="http://tempuri.org/IMobileService/DeleteAccountResponse")]
        void DeleteAccount(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/DeleteAccount", ReplyAction="http://tempuri.org/IMobileService/DeleteAccountResponse")]
        System.Threading.Tasks.Task DeleteAccountAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAllCategory", ReplyAction="http://tempuri.org/IMobileService/GetAllCategoryResponse")]
        webmvcMobile.MobileServiceReference.Category[] GetAllCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAllCategory", ReplyAction="http://tempuri.org/IMobileService/GetAllCategoryResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Category[]> GetAllCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAllCategory1", ReplyAction="http://tempuri.org/IMobileService/GetAllCategory1Response")]
        webmvcMobile.MobileServiceReference.Category[] GetAllCategory1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAllCategory1", ReplyAction="http://tempuri.org/IMobileService/GetAllCategory1Response")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Category[]> GetAllCategory1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetCategoryByID", ReplyAction="http://tempuri.org/IMobileService/GetCategoryByIDResponse")]
        webmvcMobile.MobileServiceReference.Category GetCategoryByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetCategoryByID", ReplyAction="http://tempuri.org/IMobileService/GetCategoryByIDResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Category> GetCategoryByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AddCategory", ReplyAction="http://tempuri.org/IMobileService/AddCategoryResponse")]
        void AddCategory(webmvcMobile.MobileServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AddCategory", ReplyAction="http://tempuri.org/IMobileService/AddCategoryResponse")]
        System.Threading.Tasks.Task AddCategoryAsync(webmvcMobile.MobileServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateCategory", ReplyAction="http://tempuri.org/IMobileService/UpdateCategoryResponse")]
        void UpdateCategory(webmvcMobile.MobileServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateCategory", ReplyAction="http://tempuri.org/IMobileService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task UpdateCategoryAsync(webmvcMobile.MobileServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/DeleteCategory", ReplyAction="http://tempuri.org/IMobileService/DeleteCategoryResponse")]
        void DeleteCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/DeleteCategory", ReplyAction="http://tempuri.org/IMobileService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task DeleteCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AddOrder", ReplyAction="http://tempuri.org/IMobileService/AddOrderResponse")]
        void AddOrder(webmvcMobile.MobileServiceReference.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AddOrder", ReplyAction="http://tempuri.org/IMobileService/AddOrderResponse")]
        System.Threading.Tasks.Task AddOrderAsync(webmvcMobile.MobileServiceReference.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAllOrder", ReplyAction="http://tempuri.org/IMobileService/GetAllOrderResponse")]
        webmvcMobile.MobileServiceReference.Order[] GetAllOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAllOrder", ReplyAction="http://tempuri.org/IMobileService/GetAllOrderResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Order[]> GetAllOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetOrderByID", ReplyAction="http://tempuri.org/IMobileService/GetOrderByIDResponse")]
        webmvcMobile.MobileServiceReference.Order GetOrderByID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetOrderByID", ReplyAction="http://tempuri.org/IMobileService/GetOrderByIDResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Order> GetOrderByIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateOrder", ReplyAction="http://tempuri.org/IMobileService/UpdateOrderResponse")]
        void UpdateOrder(webmvcMobile.MobileServiceReference.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateOrder", ReplyAction="http://tempuri.org/IMobileService/UpdateOrderResponse")]
        System.Threading.Tasks.Task UpdateOrderAsync(webmvcMobile.MobileServiceReference.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/DeleteOrder", ReplyAction="http://tempuri.org/IMobileService/DeleteOrderResponse")]
        void DeleteOrder(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/DeleteOrder", ReplyAction="http://tempuri.org/IMobileService/DeleteOrderResponse")]
        System.Threading.Tasks.Task DeleteOrderAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/DetailOrder", ReplyAction="http://tempuri.org/IMobileService/DetailOrderResponse")]
        webmvcMobile.MobileServiceReference.OrderDetail[] DetailOrder(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/DetailOrder", ReplyAction="http://tempuri.org/IMobileService/DetailOrderResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.OrderDetail[]> DetailOrderAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateStorage", ReplyAction="http://tempuri.org/IMobileService/UpdateStorageResponse")]
        void UpdateStorage(string productID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateStorage", ReplyAction="http://tempuri.org/IMobileService/UpdateStorageResponse")]
        System.Threading.Tasks.Task UpdateStorageAsync(string productID, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateStatus", ReplyAction="http://tempuri.org/IMobileService/UpdateStatusResponse")]
        void UpdateStatus(webmvcMobile.MobileServiceReference.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateStatus", ReplyAction="http://tempuri.org/IMobileService/UpdateStatusResponse")]
        System.Threading.Tasks.Task UpdateStatusAsync(webmvcMobile.MobileServiceReference.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateQuantityInStorage", ReplyAction="http://tempuri.org/IMobileService/UpdateQuantityInStorageResponse")]
        void UpdateQuantityInStorage(webmvcMobile.MobileServiceReference.OrderDetail odt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateQuantityInStorage", ReplyAction="http://tempuri.org/IMobileService/UpdateQuantityInStorageResponse")]
        System.Threading.Tasks.Task UpdateQuantityInStorageAsync(webmvcMobile.MobileServiceReference.OrderDetail odt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/Check_Login", ReplyAction="http://tempuri.org/IMobileService/Check_LoginResponse")]
        bool Check_Login(string account, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/Check_Login", ReplyAction="http://tempuri.org/IMobileService/Check_LoginResponse")]
        System.Threading.Tasks.Task<bool> Check_LoginAsync(string account, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AddOrderDetail", ReplyAction="http://tempuri.org/IMobileService/AddOrderDetailResponse")]
        void AddOrderDetail(webmvcMobile.MobileServiceReference.OrderDetail odt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AddOrderDetail", ReplyAction="http://tempuri.org/IMobileService/AddOrderDetailResponse")]
        System.Threading.Tasks.Task AddOrderDetailAsync(webmvcMobile.MobileServiceReference.OrderDetail odt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetOrderDetail", ReplyAction="http://tempuri.org/IMobileService/GetOrderDetailResponse")]
        webmvcMobile.MobileServiceReference.OrderDetail[] GetOrderDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetOrderDetail", ReplyAction="http://tempuri.org/IMobileService/GetOrderDetailResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.OrderDetail[]> GetOrderDetailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAllStorage", ReplyAction="http://tempuri.org/IMobileService/GetAllStorageResponse")]
        webmvcMobile.MobileServiceReference.StorageShop[] GetAllStorage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetAllStorage", ReplyAction="http://tempuri.org/IMobileService/GetAllStorageResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.StorageShop[]> GetAllStorageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AddQuantityNewProduct", ReplyAction="http://tempuri.org/IMobileService/AddQuantityNewProductResponse")]
        void AddQuantityNewProduct(webmvcMobile.MobileServiceReference.StorageShop sto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AddQuantityNewProduct", ReplyAction="http://tempuri.org/IMobileService/AddQuantityNewProductResponse")]
        System.Threading.Tasks.Task AddQuantityNewProductAsync(webmvcMobile.MobileServiceReference.StorageShop sto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetStoByID", ReplyAction="http://tempuri.org/IMobileService/GetStoByIDResponse")]
        webmvcMobile.MobileServiceReference.StorageShop GetStoByID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetStoByID", ReplyAction="http://tempuri.org/IMobileService/GetStoByIDResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.StorageShop> GetStoByIDAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateQuantityProduct", ReplyAction="http://tempuri.org/IMobileService/UpdateQuantityProductResponse")]
        void UpdateQuantityProduct(webmvcMobile.MobileServiceReference.StorageShop sto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/UpdateQuantityProduct", ReplyAction="http://tempuri.org/IMobileService/UpdateQuantityProductResponse")]
        System.Threading.Tasks.Task UpdateQuantityProductAsync(webmvcMobile.MobileServiceReference.StorageShop sto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/ReportOrderInDay", ReplyAction="http://tempuri.org/IMobileService/ReportOrderInDayResponse")]
        webmvcMobile.MobileServiceReference.Order[] ReportOrderInDay(System.DateTime day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/ReportOrderInDay", ReplyAction="http://tempuri.org/IMobileService/ReportOrderInDayResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Order[]> ReportOrderInDayAsync(System.DateTime day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/ReportSumPro", ReplyAction="http://tempuri.org/IMobileService/ReportSumProResponse")]
        int ReportSumPro(System.DateTime day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/ReportSumPro", ReplyAction="http://tempuri.org/IMobileService/ReportSumProResponse")]
        System.Threading.Tasks.Task<int> ReportSumProAsync(System.DateTime day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/ReportSumMoney", ReplyAction="http://tempuri.org/IMobileService/ReportSumMoneyResponse")]
        double ReportSumMoney(System.DateTime day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/ReportSumMoney", ReplyAction="http://tempuri.org/IMobileService/ReportSumMoneyResponse")]
        System.Threading.Tasks.Task<double> ReportSumMoneyAsync(System.DateTime day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/LogIn", ReplyAction="http://tempuri.org/IMobileService/LogInResponse")]
        webmvcMobile.MobileServiceReference.Account LogIn(string account, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/LogIn", ReplyAction="http://tempuri.org/IMobileService/LogInResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Account> LogInAsync(string account, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/Register", ReplyAction="http://tempuri.org/IMobileService/RegisterResponse")]
        webmvcMobile.MobileServiceReference.Account Register(string UserName, string Password, string Phone, string Address, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/Register", ReplyAction="http://tempuri.org/IMobileService/RegisterResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Account> RegisterAsync(string UserName, string Password, string Phone, string Address, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetProductByCategory", ReplyAction="http://tempuri.org/IMobileService/GetProductByCategoryResponse")]
        webmvcMobile.MobileServiceReference.Product[] GetProductByCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetProductByCategory", ReplyAction="http://tempuri.org/IMobileService/GetProductByCategoryResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Product[]> GetProductByCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetDetailById", ReplyAction="http://tempuri.org/IMobileService/GetDetailByIdResponse")]
        webmvcMobile.MobileServiceReference.Product[] GetDetailById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetDetailById", ReplyAction="http://tempuri.org/IMobileService/GetDetailByIdResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Product[]> GetDetailByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/SearchBasic", ReplyAction="http://tempuri.org/IMobileService/SearchBasicResponse")]
        webmvcMobile.MobileServiceReference.Product[] SearchBasic(System.Nullable<int> page, string txtSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/SearchBasic", ReplyAction="http://tempuri.org/IMobileService/SearchBasicResponse")]
        System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Product[]> SearchBasicAsync(System.Nullable<int> page, string txtSearch);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMobileServiceChannel : webmvcMobile.MobileServiceReference.IMobileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MobileServiceClient : System.ServiceModel.ClientBase<webmvcMobile.MobileServiceReference.IMobileService>, webmvcMobile.MobileServiceReference.IMobileService {
        
        public MobileServiceClient() {
        }
        
        public MobileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MobileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MobileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MobileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public webmvcMobile.MobileServiceReference.Product[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Product[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public webmvcMobile.MobileServiceReference.Product GetByID(string id) {
            return base.Channel.GetByID(id);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Product> GetByIDAsync(string id) {
            return base.Channel.GetByIDAsync(id);
        }
        
        public void AddProduct(webmvcMobile.MobileServiceReference.Product product) {
            base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(webmvcMobile.MobileServiceReference.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public void UpdateProduct(webmvcMobile.MobileServiceReference.Product product) {
            base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(webmvcMobile.MobileServiceReference.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public void DeleteProduct(string id) {
            base.Channel.DeleteProduct(id);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(string id) {
            return base.Channel.DeleteProductAsync(id);
        }
        
        public bool CheckIDProduct(string id) {
            return base.Channel.CheckIDProduct(id);
        }
        
        public System.Threading.Tasks.Task<bool> CheckIDProductAsync(string id) {
            return base.Channel.CheckIDProductAsync(id);
        }
        
        public webmvcMobile.MobileServiceReference.Account[] GetAllAccount() {
            return base.Channel.GetAllAccount();
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Account[]> GetAllAccountAsync() {
            return base.Channel.GetAllAccountAsync();
        }
        
        public webmvcMobile.MobileServiceReference.Account GetAccountByID(string id) {
            return base.Channel.GetAccountByID(id);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Account> GetAccountByIDAsync(string id) {
            return base.Channel.GetAccountByIDAsync(id);
        }
        
        public void EditAccount(webmvcMobile.MobileServiceReference.Account account) {
            base.Channel.EditAccount(account);
        }
        
        public System.Threading.Tasks.Task EditAccountAsync(webmvcMobile.MobileServiceReference.Account account) {
            return base.Channel.EditAccountAsync(account);
        }
        
        public void DeleteAccount(string id) {
            base.Channel.DeleteAccount(id);
        }
        
        public System.Threading.Tasks.Task DeleteAccountAsync(string id) {
            return base.Channel.DeleteAccountAsync(id);
        }
        
        public webmvcMobile.MobileServiceReference.Category[] GetAllCategory() {
            return base.Channel.GetAllCategory();
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Category[]> GetAllCategoryAsync() {
            return base.Channel.GetAllCategoryAsync();
        }
        
        public webmvcMobile.MobileServiceReference.Category[] GetAllCategory1() {
            return base.Channel.GetAllCategory1();
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Category[]> GetAllCategory1Async() {
            return base.Channel.GetAllCategory1Async();
        }
        
        public webmvcMobile.MobileServiceReference.Category GetCategoryByID(int id) {
            return base.Channel.GetCategoryByID(id);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Category> GetCategoryByIDAsync(int id) {
            return base.Channel.GetCategoryByIDAsync(id);
        }
        
        public void AddCategory(webmvcMobile.MobileServiceReference.Category category) {
            base.Channel.AddCategory(category);
        }
        
        public System.Threading.Tasks.Task AddCategoryAsync(webmvcMobile.MobileServiceReference.Category category) {
            return base.Channel.AddCategoryAsync(category);
        }
        
        public void UpdateCategory(webmvcMobile.MobileServiceReference.Category category) {
            base.Channel.UpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task UpdateCategoryAsync(webmvcMobile.MobileServiceReference.Category category) {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        public void DeleteCategory(int id) {
            base.Channel.DeleteCategory(id);
        }
        
        public System.Threading.Tasks.Task DeleteCategoryAsync(int id) {
            return base.Channel.DeleteCategoryAsync(id);
        }
        
        public void AddOrder(webmvcMobile.MobileServiceReference.Order order) {
            base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task AddOrderAsync(webmvcMobile.MobileServiceReference.Order order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public webmvcMobile.MobileServiceReference.Order[] GetAllOrder() {
            return base.Channel.GetAllOrder();
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Order[]> GetAllOrderAsync() {
            return base.Channel.GetAllOrderAsync();
        }
        
        public webmvcMobile.MobileServiceReference.Order GetOrderByID(System.Guid id) {
            return base.Channel.GetOrderByID(id);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Order> GetOrderByIDAsync(System.Guid id) {
            return base.Channel.GetOrderByIDAsync(id);
        }
        
        public void UpdateOrder(webmvcMobile.MobileServiceReference.Order order) {
            base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task UpdateOrderAsync(webmvcMobile.MobileServiceReference.Order order) {
            return base.Channel.UpdateOrderAsync(order);
        }
        
        public void DeleteOrder(System.Guid id) {
            base.Channel.DeleteOrder(id);
        }
        
        public System.Threading.Tasks.Task DeleteOrderAsync(System.Guid id) {
            return base.Channel.DeleteOrderAsync(id);
        }
        
        public webmvcMobile.MobileServiceReference.OrderDetail[] DetailOrder(System.Guid id) {
            return base.Channel.DetailOrder(id);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.OrderDetail[]> DetailOrderAsync(System.Guid id) {
            return base.Channel.DetailOrderAsync(id);
        }
        
        public void UpdateStorage(string productID, int quantity) {
            base.Channel.UpdateStorage(productID, quantity);
        }
        
        public System.Threading.Tasks.Task UpdateStorageAsync(string productID, int quantity) {
            return base.Channel.UpdateStorageAsync(productID, quantity);
        }
        
        public void UpdateStatus(webmvcMobile.MobileServiceReference.Order order) {
            base.Channel.UpdateStatus(order);
        }
        
        public System.Threading.Tasks.Task UpdateStatusAsync(webmvcMobile.MobileServiceReference.Order order) {
            return base.Channel.UpdateStatusAsync(order);
        }
        
        public void UpdateQuantityInStorage(webmvcMobile.MobileServiceReference.OrderDetail odt) {
            base.Channel.UpdateQuantityInStorage(odt);
        }
        
        public System.Threading.Tasks.Task UpdateQuantityInStorageAsync(webmvcMobile.MobileServiceReference.OrderDetail odt) {
            return base.Channel.UpdateQuantityInStorageAsync(odt);
        }
        
        public bool Check_Login(string account, string password) {
            return base.Channel.Check_Login(account, password);
        }
        
        public System.Threading.Tasks.Task<bool> Check_LoginAsync(string account, string password) {
            return base.Channel.Check_LoginAsync(account, password);
        }
        
        public void AddOrderDetail(webmvcMobile.MobileServiceReference.OrderDetail odt) {
            base.Channel.AddOrderDetail(odt);
        }
        
        public System.Threading.Tasks.Task AddOrderDetailAsync(webmvcMobile.MobileServiceReference.OrderDetail odt) {
            return base.Channel.AddOrderDetailAsync(odt);
        }
        
        public webmvcMobile.MobileServiceReference.OrderDetail[] GetOrderDetail() {
            return base.Channel.GetOrderDetail();
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.OrderDetail[]> GetOrderDetailAsync() {
            return base.Channel.GetOrderDetailAsync();
        }
        
        public webmvcMobile.MobileServiceReference.StorageShop[] GetAllStorage() {
            return base.Channel.GetAllStorage();
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.StorageShop[]> GetAllStorageAsync() {
            return base.Channel.GetAllStorageAsync();
        }
        
        public void AddQuantityNewProduct(webmvcMobile.MobileServiceReference.StorageShop sto) {
            base.Channel.AddQuantityNewProduct(sto);
        }
        
        public System.Threading.Tasks.Task AddQuantityNewProductAsync(webmvcMobile.MobileServiceReference.StorageShop sto) {
            return base.Channel.AddQuantityNewProductAsync(sto);
        }
        
        public webmvcMobile.MobileServiceReference.StorageShop GetStoByID(string id) {
            return base.Channel.GetStoByID(id);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.StorageShop> GetStoByIDAsync(string id) {
            return base.Channel.GetStoByIDAsync(id);
        }
        
        public void UpdateQuantityProduct(webmvcMobile.MobileServiceReference.StorageShop sto) {
            base.Channel.UpdateQuantityProduct(sto);
        }
        
        public System.Threading.Tasks.Task UpdateQuantityProductAsync(webmvcMobile.MobileServiceReference.StorageShop sto) {
            return base.Channel.UpdateQuantityProductAsync(sto);
        }
        
        public webmvcMobile.MobileServiceReference.Order[] ReportOrderInDay(System.DateTime day) {
            return base.Channel.ReportOrderInDay(day);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Order[]> ReportOrderInDayAsync(System.DateTime day) {
            return base.Channel.ReportOrderInDayAsync(day);
        }
        
        public int ReportSumPro(System.DateTime day) {
            return base.Channel.ReportSumPro(day);
        }
        
        public System.Threading.Tasks.Task<int> ReportSumProAsync(System.DateTime day) {
            return base.Channel.ReportSumProAsync(day);
        }
        
        public double ReportSumMoney(System.DateTime day) {
            return base.Channel.ReportSumMoney(day);
        }
        
        public System.Threading.Tasks.Task<double> ReportSumMoneyAsync(System.DateTime day) {
            return base.Channel.ReportSumMoneyAsync(day);
        }
        
        public webmvcMobile.MobileServiceReference.Account LogIn(string account, string password) {
            return base.Channel.LogIn(account, password);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Account> LogInAsync(string account, string password) {
            return base.Channel.LogInAsync(account, password);
        }
        
        public webmvcMobile.MobileServiceReference.Account Register(string UserName, string Password, string Phone, string Address, string Name) {
            return base.Channel.Register(UserName, Password, Phone, Address, Name);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Account> RegisterAsync(string UserName, string Password, string Phone, string Address, string Name) {
            return base.Channel.RegisterAsync(UserName, Password, Phone, Address, Name);
        }
        
        public webmvcMobile.MobileServiceReference.Product[] GetProductByCategory(int id) {
            return base.Channel.GetProductByCategory(id);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Product[]> GetProductByCategoryAsync(int id) {
            return base.Channel.GetProductByCategoryAsync(id);
        }
        
        public webmvcMobile.MobileServiceReference.Product[] GetDetailById(string id) {
            return base.Channel.GetDetailById(id);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Product[]> GetDetailByIdAsync(string id) {
            return base.Channel.GetDetailByIdAsync(id);
        }
        
        public webmvcMobile.MobileServiceReference.Product[] SearchBasic(System.Nullable<int> page, string txtSearch) {
            return base.Channel.SearchBasic(page, txtSearch);
        }
        
        public System.Threading.Tasks.Task<webmvcMobile.MobileServiceReference.Product[]> SearchBasicAsync(System.Nullable<int> page, string txtSearch) {
            return base.Channel.SearchBasicAsync(page, txtSearch);
        }
    }
}
